---  
  - name: VPC | Create vpc with multi-az subnets   
    local_action:  
      module: ec2_vpc     
      region: "{{ region }}"
      cidr_block: 10.0.0.0/16
      resource_tags: '{"Name":"{{ tagname }}_vpc"}'
      subnets:
        - cidr: 10.0.0.0/24
          az: "{{ az0 }}"
          resource_tags: '{"Name":"{{ tagname }}_subnet_public"}'
        - cidr: 10.0.1.0/24
          az: "{{ az1 }}"
          resource_tags: '{"Name":"{{ tagname }}_subnet_private"}'
      internet_gateway: True
    register: vpc
  - name: INTERNET GATEWAY | get igw
    ec2_vpc_igw:
      vpc_id: "{{ vpc.vpc_id }}"
      region: "{{ region }}"
      state: present
    register: igw
  - name: Tagging the new internet gateway created
    ec2_tag:
      resource: "{{ igw.gateway_id }}"
      state: present
      region: "{{ region }}"
      tags:
        Name: "{{ tagname }}-gateway"
  - name: VPC | Write vpc id to {{ prefix }}_vpc_info file
    local_action: shell echo "{{ prefix }}"_vpc":" "{{ vpc.vpc_id }}" > info/"{{ prefix }}"_vpc_info
  - name: VPC | write subnets id to {{ tagname }}_vpc_info file
    local_action: shell echo "{{ item.resource_tags.Name }}"":" "{{ item.id }}" 
                    >> info/"{{ tagname }}"_vpc_info
    with_items: "{{ vpc.subnets }}"
  - name: VPC | output vpc info
    debug: msg="VPC info  is {{ vpc }}"
  - name: NAT GATEWAY | Create new nat gateway and allocate new Elastic IP.
    ec2_vpc_nat_gateway:
      state: present
      subnet_id: "{{ vpc.subnets[0].id }}"
      wait: yes
      region: "{{ region }}"
    register: nat_gateway
  - name: NAT GATEWAY | Output nat gateway creation output
    debug: var=nat_gateway_check
  - name: ROUTE TABLE | Set up public subnet route table
    ec2_vpc_route_table:
      vpc_id: "{{ vpc.vpc_id }}"
      region: "{{ region }}"
      tags:
        Name: "{{ tagname }}PublicSN"
      subnets:
        - "{{ vpc.subnets[0].id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ igw.gateway_id }}"
    register: public_route_table
  - name: ROUTE TABLE | Output public route table creation output
    debug: var=public_route_table
  - name: ROUTE TABLE | Set up NAT-protected route table
    ec2_vpc_route_table:
      vpc_id: "{{ vpc.vpc_id }}"
      region: "{{ region }}"
      tags:
        Name: "{{ tagname }}PrivateSN"
      subnets:
        - "{{ vpc.subnets[1].id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ nat_gateway.nat_gateway_id }}"
    register: nat_route_table
  - name: ROUTE TABLE | Output private route table creation output
    debug: var=nat_route_table
