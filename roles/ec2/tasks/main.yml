---  
  - name: SECURITY GROUP | Create bastion ssh security group
    ec2_group:
      name: "{{ tagname }}_bastion_security_group"
      description: "{{ tagname }} bastion ssh security group"
      region: "{{ region }}"
      vpc_id: "{{ vpc.vpc_id }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
    register: basic_ssh
  - name: SECURITY GROUP | Create elb http security group
    ec2_group:
      name: "{{ tagname }}_elb_security_group"
      description: "{{ tagname }} elb http security group"
      region: "{{ region }}"
      vpc_id: "{{ vpc.vpc_id }}"
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
    register: elb_sg
  - name: EC2 Launch bastion instance 
    ec2:
      key_name: "{{ keyname }}"
      group_id: "{{ basic_ssh.group_id }}"
      instance_type: "{{ instance_type }}"
      image: "{{ ami_id }}"
      wait: true
      region: "{{ region }}"
      vpc_subnet_id: "{{ vpc.subnets[0].id }}"
      instance_tags:
        name: "bastion instance {{ tagname }}"
      assign_public_ip: yes
    register: ec2_bastion
  - name: SECURITY GROUP | Create internal ssh security group
    ec2_group:
      name: "{{ tagname }}_internal_security_group"
      description: "{{ tagname }} internal ssh security group"
      region: "{{ region }}"
      vpc_id: "{{ vpc.vpc_id }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          group_id: "{{ basic_ssh.group_id }}"
    register: internal_sg
  - name: EC2 Launch web instance 
    ec2:
      key_name: "{{ keyname }}"
      group_id: "{{ internal_sg.group_id }}"
      instance_type: "{{ instance_type }}"
      image: "{{ ami_id }}"
      wait: true
      region: "{{ region }}"
      vpc_subnet_id: "{{ vpc.subnets[1].id }}"
      instance_tags:
        name: "web instance {{ tagname }}"
      assign_public_ip: no
    register: ec2_web_internal